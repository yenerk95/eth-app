import { bytes, bytes32, uint32, uint64 } from "./basic";
import { KeyPair } from "./libp2p";
export declare type Hkdf = [bytes, bytes, bytes];
export declare type MessageBuffer = {
    ne: bytes32;
    ns: bytes;
    ciphertext: bytes;
};
export declare type CipherState = {
    k: bytes32;
    n: uint32;
};
export declare type SymmetricState = {
    cs: CipherState;
    ck: bytes32;
    h: bytes32;
};
export declare type HandshakeState = {
    ss: SymmetricState;
    s: KeyPair;
    e?: KeyPair;
    rs: bytes32;
    re: bytes32;
    psk: bytes32;
};
export declare type NoiseSession = {
    hs: HandshakeState;
    h?: bytes32;
    cs1?: CipherState;
    cs2?: CipherState;
    mc: uint64;
    i: boolean;
};
export interface INoisePayload {
    identityKey: bytes;
    identitySig: bytes;
    data: bytes;
}
